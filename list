一. List 列 表 (双向链表结构)

  
二. 添 加 数 据 :  


    <1> lpush

        在 头 的位置添加元素

        示 例 : 

        lpush key value1 value2

    <2> rpush

        在 末尾 添加元素

        示 例 :

        rpush key value1 value2

    <3> linsert 

        在指定的 前/后插入数据

        linsert key before/after pivot value

        示 例 :

        linsert list1 before world 1


三. 查 看 数 据 :


    <1> lrange

        范围性 获取 list中的 数据
        
        示 例 :

        lrange key start stop (0 表 开头 -1 表 末尾)

        lrange list1 0 -1

    <2> lindex 

        返回 指定索引上的 元素

        lindex key index

        lindex list1 3

    <3> llen 

        获取列表长度

        llen key


四. 修 改 数 据 :

    <1> lset

        修改指定 索引处的 数据

        lset key index value

        示 例 : 

        lset list1 1 2


五. 删 除 数 据 :

    <1> lpop

        删除 左侧 第一个元素

        lpop key

    <2> rpop 

        删除 右侧 第一个元素

    <3> lrem 

        删除 指定次数的 value

        lrem key count value

        count =  2 从头开始 删一次 value

        count =  0 删除所有 此     value

        count = -1 从尾开始 删一次 value

        count = -2 从尾开始 删两次 value

    <4> ltrim 

        删除 此范围外 的所有值 (只保留 start_index and stop_index 中的 value)

        ltrim key start stop

    <5> rpoplpush 

        rpoplpush list1 list2

        删除 list1的末尾,添加到 list2的头部
